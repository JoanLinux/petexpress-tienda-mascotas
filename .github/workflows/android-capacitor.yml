name: Vite + Capacitor â†’ APK

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-apk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Assert android dir exists (fail fast)
        run: |
          test -d android || (echo "ERROR: android/ no existe en el repo" && exit 1)
          ls -la android

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install deps
        run: npm ci

      - name: Build web (Vite)
        run: npm run build

      # 1) Android SDK primero
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # 2) Luego Java 21
      - name: Setup Java 21
        id: jdk
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: gradle

      - name: Check Java versions
        run: |
          echo "JAVA_HOME=$JAVA_HOME"
          java -version
          javac -version

      # Forzar a Gradle a usar Java 21
      - name: Pin JAVA_HOME 21 into gradle.properties
        run: |
          echo "org.gradle.java.home=${JAVA_HOME}" >> android/gradle.properties
          tail -n 3 android/gradle.properties || true

      - name: Sync Capacitor
        run: |
          npx cap copy android
          npx cap sync android

      # ----- DEBUG (siempre) -----
      - name: Build Debug APK
        working-directory: android
        run: |
          chmod +x gradlew
          ./gradlew assembleDebug --no-daemon

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk

      # ----- RELEASE firmado (solo si hay secretos) -----
      - name: Restore keystore & signing vars
        if: ${{ env.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > android/app/upload.keystore
          {
            echo "MYAPP_UPLOAD_STORE_FILE=upload.keystore"
            echo "MYAPP_UPLOAD_STORE_PASSWORD=${ANDROID_KEYSTORE_PASSWORD}"
            echo "MYAPP_UPLOAD_KEY_ALIAS=${ANDROID_KEY_ALIAS}"
            echo "MYAPP_UPLOAD_KEY_PASSWORD=${ANDROID_KEY_ALIAS_PASSWORD}"
          } >> android/gradle.properties
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_ALIAS_PASSWORD: ${{ secrets.ANDROID_KEY_ALIAS_PASSWORD }}

      - name: Build Release APK (signed)
        if: ${{ env.ANDROID_KEYSTORE_BASE64 != '' }}
        working-directory: android
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: ./gradlew assembleRelease --no-daemon

      - name: Upload Release APK (signed)
        if: ${{ env.ANDROID_KEYSTORE_BASE64 != '' }}
        uses: actions/upload-artifact@v4
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        with:
          name: app-release-signed
          path: android/app/build/outputs/apk/release/app-release.apk

      # ----- RELEASE sin firma (si NO hay secretos) -----
      - name: Build Release APK (unsigned)
        if: ${{ env.ANDROID_KEYSTORE_BASE64 == '' }}
        working-directory: android
        run: ./gradlew assembleRelease --no-daemon

      - name: Upload Release APK (unsigned)
        if: ${{ env.ANDROID_KEYSTORE_BASE64 == '' }}
        uses: actions/upload-artifact@v4
        with:
          name: app-release-unsigned
          path: android/app/build/outputs/apk/release/app-release-unsigned.apk

